import { graphql } from 'react-apollo'
import { getEntitiesFromEdgesSafely } from 'common-data/artifacts/logic/relay'
import { <%= queryName %>Query as I<%= interfaceName %>Query } from '../../../operation-result-types'
import <%= queryName %> from '../queries/<%= queryFileName %>';

export interface I<%= nodeType %> {
  <%_ for (var i = 0; i < props.length; i++) { -%>
  <%_ var prop = props[i], key = prop.type.key, value = prop.type.value -%>
  <%= key %>: <%= value -%>;
  <%_} -%>
}

export interface IWith<%= interfaceName %>WrappedProps {
  <%= queryName %>: I<%= nodeType %>[],
}

export default graphql<I<%= interfaceName %>Query, {}, IWith<%= interfaceName %>WrappedProps>(<%= queryName %>, {
  options: () => ({
    notifyOnNetworkStatusChange: true,
  }),
  props: (props) => ({
    ...props,
    <%= queryName %>: getEntitiesFromEdgesSafely(['viewer', '<%= queryName %>', 'edges'], props.data),
  }),
})
